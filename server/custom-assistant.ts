/**
 * Custom TherapyFlow Navigation Assistant
 * Hybrid approach: Database-backed guides with rule-based matching
 */

import { storage } from './storage';
import type { HelpGuide } from '@shared/schema';

interface NavigationGuide {
  question: string[];
  answer: string;
  category: string;
  helpGuideSlug?: string;
}

// Knowledge base of actual TherapyFlow navigation - built from real app structure
const NAVIGATION_GUIDES: NavigationGuide[] = [
  // Client Management
  {
    question: ["add client", "new client", "create client"],
    answer: "**How to Add a New Client:**\n\n**Required Fields:**\n‚Ä¢ First Name & Last Name\n\n**Optional Fields:**\n‚Ä¢ Email, Phone, Date of Birth\n‚Ä¢ Address (Street, City, State, ZIP)\n‚Ä¢ Status (Active, Inactive, Discharged, On Hold, Waitlist)\n‚Ä¢ Risk Level (None, Low, Medium, High, Critical)\n‚Ä¢ Assigned Therapist\n\n**Steps:**\n1. Click **Clients** ‚Üí **+ Add Client** (top right)\n2. Fill in client information\n3. Click **Create Client**\n\n**üí° Tips:**\n‚Ä¢ Add email to enable portal access and automated reminders\n‚Ä¢ Set risk level for proper monitoring and alerts\n‚Ä¢ Assign therapist for calendar/scheduling integration",
    category: "clients",
    helpGuideSlug: "add-client"
  },
  {
    question: ["view client", "see client", "find client", "client profile"],
    answer: "**How to View Client Profiles:**\n\n**Steps:**\n1. Click **Clients** in top navigation\n2. Use search box or browse the list\n3. Click client name to open full profile\n\n**Client Profile Tabs:**\n‚Ä¢ Overview - Basic info, demographics, contact\n‚Ä¢ Sessions - Session notes and history\n‚Ä¢ Documents - Uploaded files and forms\n‚Ä¢ Assessments - Assigned assessments and reports\n‚Ä¢ Tasks - Client-related tasks\n‚Ä¢ Portal Access - Login credentials and access settings\n‚Ä¢ Billing - Payment history and invoices\n\n**üí° Quick Actions:**\n‚Ä¢ Schedule appointment directly from profile\n‚Ä¢ Add session note from Sessions tab\n‚Ä¢ Upload documents via Documents tab",
    category: "clients",
    helpGuideSlug: "add-client"
  },
  {
    question: ["edit client", "update client", "change client"],
    answer: "**How to Edit Client Information:**\n\n**Steps:**\n1. Click **Clients** ‚Üí Click client name\n2. Click **Edit** button in profile header\n3. Update information\n4. Click **Save**\n\n**What You Can Edit:**\n‚Ä¢ Demographics (name, DOB, contact info)\n‚Ä¢ Status and Risk Level\n‚Ä¢ Assigned Therapist\n‚Ä¢ Address and contact details\n\n**üí° Important:**\n‚Ä¢ Changes are logged in HIPAA audit trail\n‚Ä¢ Status changes affect client visibility in lists\n‚Ä¢ Risk level changes trigger security notifications",
    category: "clients",
    helpGuideSlug: "edit-client"
  },
  
  // Scheduling
  {
    question: ["schedule appointment", "book session", "add appointment", "create session"],
    answer: "**How to Schedule an Appointment:**\n\n**Steps:**\n1. Click **Scheduling** ‚Üí Choose view (Day/Week/Month)\n2. Click a time slot in the calendar\n3. Fill in appointment details\n4. Click **Create Session**\n\n**Required Fields:**\n‚Ä¢ Client\n‚Ä¢ Session Type (Initial, Follow-up, Group, etc.)\n‚Ä¢ Service (from billing catalog)\n‚Ä¢ Start Time & Duration\n‚Ä¢ Location/Room\n\n**Session Statuses:**\n‚Ä¢ Scheduled ‚Üí Completed ‚Üí Cancelled ‚Üí Rescheduled ‚Üí No Show\n\n**üí° Tips:**\n‚Ä¢ Color-coded by session type for easy viewing\n‚Ä¢ Drag sessions to reschedule in calendar\n‚Ä¢ Double-click time slot for quick scheduling\n‚Ä¢ Service selection auto-sets billing info",
    category: "scheduling",
    helpGuideSlug: "schedule-appointment"
  },
  {
    question: ["calendar view", "change view", "switch view"],
    answer: "**Calendar Views:**\n\n**üìÖ Day View** - Hourly breakdown, detailed schedule\n**üìÜ Week View** - 7-day overview, best for planning\n**üóìÔ∏è Month View** - Full month snapshot, high-level view\n\n**How to Switch:**\n‚Ä¢ Click tabs at top of calendar\n‚Ä¢ Use arrow buttons to navigate dates\n‚Ä¢ Click \"Today\" to jump to current date\n\n**üí° Features:**\n‚Ä¢ Color-coded by session type\n‚Ä¢ Click any session to edit in-place\n‚Ä¢ Filter by therapist or room\n‚Ä¢ Export calendar to print schedules",
    category: "scheduling",
    helpGuideSlug: "schedule-appointment"
  },
  {
    question: ["cancel appointment", "delete session", "cancel session"],
    answer: "**How to Cancel/Reschedule:**\n\n**Cancel Appointment:**\n1. Click appointment on calendar\n2. Click **Edit** ‚Üí Change status to **Cancelled**\n3. Add cancellation reason (optional)\n4. Click **Save**\n\n**Reschedule Appointment:**\n1. Drag session to new time slot, OR\n2. Edit session ‚Üí Change date/time ‚Üí Save\n\n**üí° Important:**\n‚Ä¢ Cancelled sessions stay in system for records\n‚Ä¢ Billing status updated automatically\n‚Ä¢ Email notifications sent to client if enabled\n‚Ä¢ Track no-shows separately from cancellations",
    category: "scheduling",
    helpGuideSlug: "schedule-appointment"
  },
  
  // Session Notes
  {
    question: ["add session note", "write note", "document session", "create note", "session note", "write session note", "create session note"],
    answer: "**How to Add a Session Note:**\n\n**Steps:**\n1. **Clients** ‚Üí Click client ‚Üí **Sessions** tab\n2. Click **+ Add Session Note**\n3. Fill in clinical documentation\n4. Click **Save Session Note**\n\n**Note Sections:**\n‚Ä¢ Session Details (date, time, duration, type)\n‚Ä¢ Mood Tracking (current mood, changes observed)\n‚Ä¢ Goals & Progress\n‚Ä¢ Interventions Used\n‚Ä¢ Clinical Observations\n‚Ä¢ **Risk Assessment** (10-factor matrix)\n‚Ä¢ Treatment Plan Updates\n\n**Risk Assessment Factors:**\nSuicidal Ideation ‚Ä¢ Self-Harm ‚Ä¢ Homicidal Ideation ‚Ä¢ Psychosis ‚Ä¢ Substance Use ‚Ä¢ Impulsivity ‚Ä¢ Aggression/Violence ‚Ä¢ Trauma Symptoms ‚Ä¢ Non-Adherence ‚Ä¢ Support System\n\n**üí° Features:**\n‚Ä¢ Auto-save every 30 seconds\n‚Ä¢ Pick from Library content for quick documentation\n‚Ä¢ Rich text formatting\n‚Ä¢ HIPAA audit logging",
    category: "notes",
    helpGuideSlug: "add-session-note"
  },
  {
    question: ["ai note", "generate note", "ai help note"],
    answer: "**How to Use AI for Session Notes:**\n\n**Steps:**\n1. Open session note form\n2. Click **Generate with AI** button\n3. AI drafts note using OpenAI\n4. Review and edit generated content\n5. Click **Save Session Note**\n\n**AI Can Generate:**\n‚Ä¢ Clinical observations from session details\n‚Ä¢ Progress notes in professional format\n‚Ä¢ Treatment recommendations\n‚Ä¢ Structured SOAP notes\n\n**üí° AI Templates:**\n‚Ä¢ Create reusable templates for common scenarios\n‚Ä¢ Save templates for future use\n‚Ä¢ Edit and customize AI output\n‚Ä¢ All AI-generated notes fully editable",
    category: "notes",
    helpGuideSlug: "ai-note"
  },
  
  // Library
  {
    question: ["library", "add library", "library content", "clinical content"],
    answer: "**How to Add Library Content:**\n\n1. Click **Administration** dropdown ‚Üí Select **Library**\n2. Choose a category tab: Session Focus, Symptoms, Goals, Interventions, or Progress\n3. Click **+ Add Entry**\n4. Enter your content\n5. Click **Save**",
    category: "library"
  },
  {
    question: ["connect library", "link library", "library connections"],
    answer: "**How to Connect Library Entries:**\n\n1. Go to **Administration** ‚Üí **Library**\n2. Click on any entry\n3. Click the **Connect** button\n4. Select related entries from other categories\n5. Click **Save Connections**",
    category: "library"
  },
  
  // Tasks
  {
    question: ["create task", "add task", "new task"],
    answer: "**How to Create a Task:**\n\n**Steps:**\n1. Click **Tasks** in top navigation ‚Üí **+ Add Task**\n2. Fill in required fields: Title, Description, **Client** (required), Assigned To, Due Date\n3. Set Priority level and initial Status\n4. Click **Create Task**\n\n**Priority Levels:**\n- üîµ Low | üü° Medium | üü† High | üî¥ Urgent\n\n**Task Statuses:**\n- Pending ‚Üí In Progress ‚Üí Completed ‚Üí Overdue (auto-set when past due)\n\n**üí° Tips:**\n‚Ä¢ Tasks automatically show overdue when past their due date\n‚Ä¢ Link tasks to clients to see them in client profiles\n‚Ä¢ Add comments to track progress and communicate with team\n‚Ä¢ Use filters to find tasks by status, priority, or assignee",
    category: "tasks",
    helpGuideSlug: "create-task"
  },
  {
    question: ["filter tasks", "search tasks", "find tasks"],
    answer: "**How to Filter Tasks:**\n\n**Quick Filters (Top of Tasks Page):**\n‚Ä¢ **Status:** All | Pending | In Progress | Completed | Overdue\n‚Ä¢ **Priority:** All | Low | Medium | High | Urgent\n‚Ä¢ **Assigned To:** Filter by team member\n‚Ä¢ **Client:** See tasks for specific client\n\n**üí° Tips:**\n‚Ä¢ Filters combine - use multiple at once to narrow results\n‚Ä¢ Overdue tasks automatically highlighted in red\n‚Ä¢ Results update instantly as you change filters\n‚Ä¢ Export filtered task lists for reports",
    category: "tasks",
    helpGuideSlug: "create-task"
  },
  {
    question: ["complete task", "mark task done", "finish task"],
    answer: "**How to Complete a Task:**\n\n**Quick Method:**\n1. Go to **Tasks** page ‚Üí Find your task\n2. Click the task to open details\n3. Change Status to **Completed**\n4. Click **Save**\n\n**üí° Good Practice:**\n‚Ä¢ Add a final comment noting completion details\n‚Ä¢ Update progress notes before marking complete\n‚Ä¢ Completed tasks stay visible in task list for records\n‚Ä¢ Use filters to hide completed tasks from daily view",
    category: "tasks",
    helpGuideSlug: "create-task"
  },
  
  // Billing
  {
    question: ["add service", "billing service", "create service"],
    answer: "**How to Add a Billing Service:**\n\n**Steps:**\n1. **Billing** ‚Üí **Services** tab ‚Üí **+ Add Service**\n2. Enter service details\n3. Click **Create**\n\n**Service Fields:**\n‚Ä¢ Name (e.g., \"Individual Therapy\")\n‚Ä¢ CPT Code (e.g., \"90834\")\n‚Ä¢ Price (default rate)\n‚Ä¢ Duration (minutes)\n\n**üí° Tips:**\n‚Ä¢ Services auto-populate when scheduling sessions\n‚Ä¢ Link services to insurance codes for claims\n‚Ä¢ Set different rates for different service types\n‚Ä¢ Services appear in billing reports and invoices",
    category: "billing",
    helpGuideSlug: "create-invoice"
  },
  {
    question: ["add room", "create room", "billing room"],
    answer: "**How to Add a Room:**\n\n**Steps:**\n1. **Billing** ‚Üí **Rooms** tab ‚Üí **+ Add Room**\n2. Enter room name and details\n3. Click **Create**\n\n**üí° Purpose:**\n‚Ä¢ Track which room used for each session\n‚Ä¢ Filter calendar by room availability\n‚Ä¢ Room data included in billing records\n‚Ä¢ Helpful for multi-location practices",
    category: "billing",
    helpGuideSlug: "create-invoice"
  },
  {
    question: ["payment status", "track payments", "billing sessions"],
    answer: "**How to Track Payments:**\n\n**View Payment Status:**\n‚Ä¢ **Billing** ‚Üí **Sessions** tab\n\n**Payment Statuses:**\n‚Ä¢ üü¢ **Paid** - Payment received\n‚Ä¢ üü° **Billed** - Invoice sent, awaiting payment\n‚Ä¢ üîµ **Pending** - Session completed, not yet billed\n‚Ä¢ üî¥ **Denied** - Claim denied by insurance\n‚Ä¢ üü£ **Refunded** - Payment refunded to client\n‚Ä¢ üü† **Follow Up** - Requires attention\n\n**üí° Features:**\n‚Ä¢ Filter by date range and status\n‚Ä¢ Export for accounting reports\n‚Ä¢ Stripe integration for online payments\n‚Ä¢ Automatic status updates when payments received",
    category: "billing",
    helpGuideSlug: "create-invoice"
  },
  
  // Assessments
  {
    question: ["create assessment", "assessment template", "add assessment"],
    answer: "**How to Create Assessment Templates:**\n\n**Steps:**\n1. **Administration** ‚Üí **Assessments** ‚Üí **+ Create Template**\n2. Enter template details and questions\n3. Click **Save Template**\n\n**Template Fields:**\n‚Ä¢ Template Name & Description\n‚Ä¢ Question Type (Text, Multiple Choice, Rating Scale)\n‚Ä¢ Question text and options\n\n**üí° Features:**\n‚Ä¢ Reusable templates for all clients\n‚Ä¢ Multiple question types supported\n‚Ä¢ Templates can be edited anytime\n‚Ä¢ Track completion rates and responses",
    category: "assessments"
  },
  {
    question: ["assign assessment", "give assessment to client"],
    answer: "**How to Assign Assessments:**\n\n**Steps:**\n1. **Clients** ‚Üí Click client ‚Üí **Assessments** tab\n2. Click **Assign Assessment**\n3. Select template and set due date\n4. Click **Assign**\n\n**Assessment Workflow:**\n1. **Pending** - Assigned, waiting for client\n2. **Client In Progress** - Client started, not finished\n3. **Waiting for Therapist** - Client submitted, needs review\n4. **Therapist Completed** - AI report generated, in draft\n5. **Completed** - Finalized with digital signature\n\n**üí° Features:**\n‚Ä¢ Client completes via portal\n‚Ä¢ AI generates professional reports\n‚Ä¢ Auto-save every 30 seconds\n‚Ä¢ Export to PDF or Word\n‚Ä¢ Digital signatures for compliance",
    category: "assessments"
  },
  
  // Client Portal
  {
    question: ["client portal", "give client access", "portal access"],
    answer: "**How to Enable Client Portal:**\n\n**Steps:**\n1. **Clients** ‚Üí Click client ‚Üí **Portal Access** tab\n2. Toggle **Enable Portal Access** ON\n3. System auto-generates username/password\n4. Click **Send Welcome Email**\n\n**What Clients Can Do:**\n‚Ä¢ View appointments and schedule\n‚Ä¢ Upload documents securely\n‚Ä¢ View and pay invoices (Stripe)\n‚Ä¢ Complete assigned assessments\n‚Ä¢ Update contact information\n\n**üí° Security:**\n‚Ä¢ Unique login credentials per client\n‚Ä¢ All access HIPAA audit logged\n‚Ä¢ Clients see only their own data\n‚Ä¢ Portal timezone: America/New_York",
    category: "portal"
  },
  
  // User Management
  {
    question: ["add user", "create user", "new staff"],
    answer: "**How to Add Staff Users:**\n\n**Steps:**\n1. **Administration** ‚Üí **User Profiles** ‚Üí **+ Add User**\n2. Fill in user information\n3. Select role and permissions\n4. Click **Create User**\n\n**User Roles:**\n‚Ä¢ Admin - Full system access\n‚Ä¢ Supervisor - Manage team, view all clients\n‚Ä¢ Therapist - Manage own clients and sessions\n‚Ä¢ Billing - Access billing and payments only\n\n**üí° Permissions:**\n‚Ä¢ 15 granular permissions per role\n‚Ä¢ Customize access by feature\n‚Ä¢ Role-based navigation visibility",
    category: "admin"
  },
  {
    question: ["my profile", "change password", "update my info"],
    answer: "**How to Manage Your Profile:**\n\n**Steps:**\n1. Click your name (top right) ‚Üí **My Profile**\n2. Edit your information\n3. Click **Save Changes**\n\n**Profile Tabs:**\n‚Ä¢ **Personal Info** - Name, email, phone\n‚Ä¢ **Credentials** - 9 license types (LCSW, LMFT, PhD, etc.)\n‚Ä¢ **Professional Details** - Bio, specialties, education\n‚Ä¢ **Working Hours** - Set availability for scheduling\n‚Ä¢ **Zoom Integration** - Connect for virtual sessions\n‚Ä¢ **Security** - Change password\n‚Ä¢ **Notifications** - Email preferences\n‚Ä¢ **Signature** - Upload digital signature\n\n**üí° Features:**\n‚Ä¢ Working hours control appointment availability\n‚Ä¢ Credentials display on reports\n‚Ä¢ Signature auto-applies to documents",
    category: "profile"
  },
  
  // Navigation & General
  {
    question: ["dashboard", "home", "main page"],
    answer: "**Dashboard Overview:**\n\n**Quick Stats:**\n‚Ä¢ Total Active Clients\n‚Ä¢ Appointments Today\n‚Ä¢ Pending Tasks\n‚Ä¢ Outstanding Payments\n\n**Sections:**\n‚Ä¢ **Upcoming Appointments** - Next 5 sessions\n‚Ä¢ **Recent Activity** - Latest client updates\n‚Ä¢ **Task Alerts** - Overdue and urgent tasks\n‚Ä¢ **Quick Actions** - Add client, schedule, create task\n\n**üí° Access:**\nClick **Dashboard** in top navigation anytime",
    category: "navigation"
  },
  {
    question: ["administration", "admin menu", "settings"],
    answer: "**Administration Menu:**\n\n**Access:** Click **Administration** in top navigation\n\n**Available Modules:**\n‚Ä¢ **Library** - Clinical content management\n‚Ä¢ **Assessments** - Template management\n‚Ä¢ **Process Checklists** - Workflow templates\n‚Ä¢ **User Profiles** - Staff management\n‚Ä¢ **Role Management** - Permission settings\n‚Ä¢ **Notifications** - Email configuration\n‚Ä¢ **HIPAA Audit** - Security logs\n‚Ä¢ **Settings** - System configuration\n\n**üí° Permissions:**\nOnly visible to Admin and Supervisor roles\nEach module requires specific permissions",
    category: "navigation"
  },
];

/**
 * Search database guides and score them based on relevance
 */
async function searchDatabaseGuides(userQuestion: string): Promise<{ guide: HelpGuide; score: number; matchLength: number }[]> {
  try {
    // Search database guides
    const dbGuides = await storage.searchHelpGuides(userQuestion);
    
    if (dbGuides.length === 0) {
      return [];
    }
    
    const normalizedQuestion = userQuestion.toLowerCase().trim().replace(/[?!.,]/g, '');
    const fillerWords = ['how', 'do', 'i', 'can', 'where', 'what', 'is', 'the', 'a', 'an', 'to', 'for', 'my', 'me', 'you', 'your'];
    const questionTokens = normalizedQuestion
      .split(/\s+/)
      .filter(word => word.length > 1 && !fillerWords.includes(word));
    
    // Score each guide based on keyword overlap
    const scoredGuides = dbGuides.map(guide => {
      let bestScore = 0;
      let bestMatchLength = 0;
      
      // Combine title, tags, and search terms for matching
      const allKeywords = [
        guide.title.toLowerCase(),
        ...guide.tags.map(t => t.toLowerCase()),
        ...guide.searchTerms.map(t => t.toLowerCase())
      ];
      
      // Try each keyword pattern
      for (const keyword of allKeywords) {
        const keywordTokens = keyword.split(/\s+/).filter(t => t.length > 1);
        
        const matchedKeywords = keywordTokens.filter(kt => 
          questionTokens.some(qt => qt === kt)
        ).length;
        
        const matchedQuestion = questionTokens.filter(qt =>
          keywordTokens.some(kt => qt === kt)
        ).length;
        
        const completeness = keywordTokens.length > 0 ? matchedKeywords / keywordTokens.length : 0;
        const coverage = questionTokens.length > 0 ? matchedQuestion / questionTokens.length : 0;
        const specificity = keywordTokens.length;
        
        const score = (completeness * 0.5) + (coverage * 0.4) + (Math.min(specificity / 5, 1) * 0.1);
        
        if (score > bestScore || (score === bestScore && specificity > bestMatchLength)) {
          bestScore = score;
          bestMatchLength = specificity;
        }
      }
      
      return { guide, score: bestScore, matchLength: bestMatchLength };
    }).filter(item => item.score > 0.3);
    
    // Sort by score, then by view count (popularity)
    scoredGuides.sort((a, b) => {
      if (Math.abs(b.score - a.score) < 0.01) {
        return (b.guide.viewCount || 0) - (a.guide.viewCount || 0);
      }
      return b.score - a.score;
    });
    
    return scoredGuides;
  } catch (error) {
    console.error('Error searching database guides:', error);
    return [];
  }
}

/**
 * Format guide response - database guides already comprehensive, no link needed
 */
function formatGuideResponse(guide: HelpGuide): string {
  return guide.content;
}

/**
 * Find the best matching answer for a user's question
 * Searches database first, falls back to local guides if needed
 */
export async function findAnswer(userQuestion: string): Promise<string> {
  // Try database guides first
  const dbResults = await searchDatabaseGuides(userQuestion);
  if (dbResults.length > 0) {
    return formatGuideResponse(dbResults[0].guide);
  }
  
  // Fallback to local guides
  return findLocalAnswer(userQuestion);
}

/**
 * Original local guide matching (kept as fallback)
 */
function findLocalAnswer(userQuestion: string): string {
  const normalizedQuestion = userQuestion.toLowerCase().trim().replace(/[?!.,]/g, '');
  
  // Tokenize the question (split into words, remove common filler words)
  const fillerWords = ['how', 'do', 'i', 'can', 'where', 'what', 'is', 'the', 'a', 'an', 'to', 'for', 'my', 'me', 'you', 'your'];
  const questionTokens = normalizedQuestion
    .split(/\s+/)
    .filter(word => word.length > 1 && !fillerWords.includes(word));
  
  // Score each guide based on keyword overlap using Jaccard similarity
  const scoredGuides = NAVIGATION_GUIDES.map(guide => {
    let bestScore = 0;
    let bestMatchLength = 0;
    
    // Try each keyword pattern
    for (const keyword of guide.question) {
      const keywordTokens = keyword.split(/\s+/).filter(t => t.length > 1);
      
      // Count exact whole-token matches (no substring matching)
      const matchedKeywords = keywordTokens.filter(kt => 
        questionTokens.some(qt => qt === kt)
      ).length;
      
      const matchedQuestion = questionTokens.filter(qt =>
        keywordTokens.some(kt => qt === kt)
      ).length;
      
      // Completeness: All keyword tokens must be in question
      const completeness = keywordTokens.length > 0 ? matchedKeywords / keywordTokens.length : 0;
      
      // Coverage: How much of the question is explained by the keyword?
      // Penalty for extra unmatched question tokens
      const coverage = questionTokens.length > 0 ? matchedQuestion / questionTokens.length : 0;
      
      // Specificity: Prefer longer, more specific patterns
      const specificity = keywordTokens.length;
      
      // Final score heavily weights bidirectional match quality
      // - Must match all keyword tokens (completeness)
      // - Should match most question tokens (coverage) 
      // - Longer patterns break ties
      const score = (completeness * 0.5) + (coverage * 0.4) + (Math.min(specificity / 5, 1) * 0.1);
      
      if (score > bestScore || (score === bestScore && specificity > bestMatchLength)) {
        bestScore = score;
        bestMatchLength = specificity;
      }
    }
    
    return { guide, score: bestScore, matchLength: bestMatchLength };
  }).filter(item => item.score > 0.3); // Require at least 30% match
  
  // Sort by score (highest first), then by match length (longer/more specific first)
  scoredGuides.sort((a, b) => {
    if (Math.abs(b.score - a.score) < 0.01) {
      return b.matchLength - a.matchLength;
    }
    return b.score - a.score;
  });
  
  if (scoredGuides.length === 0) {
    return "I'm not sure how to help with that specific question. Could you try asking:\n\n" +
      "- How do I add a client?\n" +
      "- How do I schedule an appointment?\n" +
      "- How do I create a task?\n" +
      "- How do I add library content?\n" +
      "- How do I write a session note?\n\n" +
      "Or ask about navigating to a specific section of TherapyFlow.";
  }
  
  // Return the highest scoring match - comprehensive info in chatbot
  return scoredGuides[0].guide.answer;
}

/**
 * Get contextual suggestions based on current page
 */
export function getContextualSuggestions(currentPage: string): string[] {
  const pageMap: Record<string, string[]> = {
    dashboard: [
      "How do I add a new client?",
      "How do I schedule an appointment?",
      "How do I create a task?"
    ],
    clients: [
      "How do I add a new client?",
      "How do I view a client's sessions?",
      "How do I edit client information?"
    ],
    scheduling: [
      "How do I schedule an appointment?",
      "How do I change calendar views?",
      "How do I cancel an appointment?"
    ],
    library: [
      "How do I add library content?",
      "How do I connect library entries?",
      "What are the library categories?"
    ],
    tasks: [
      "How do I create a task?",
      "How do I filter tasks?",
      "How do I mark a task complete?"
    ],
    billing: [
      "How do I add a service?",
      "How do I track payments?",
      "How do I add a room?"
    ],
    assessments: [
      "How do I create an assessment?",
      "How do I assign an assessment to a client?"
    ],
    portal: [
      "How do I give a client portal access?",
      "What can clients do in the portal?"
    ]
  };
  
  return pageMap[currentPage] || pageMap.dashboard;
}
